{"version":3,"sources":["components/slide-content/slide-content.tsx","components/slider/slides.ts","components/slider/slider.tsx","components/header/header.tsx","components/main-block/main-block.tsx","components/footer/footer.tsx","components/pages/start-page/start-page.tsx","components/map-widget/map-widget.tsx","store/types.ts","api/api-factory.ts","store/actions.ts","components/step-one/step-one.tsx","utils/utils.ts","components/order-details/order-details.tsx","components/car-card/car-card.tsx","components/model-grid/model-grid.tsx","components/step-two/step-two.tsx","components/pages/order-page/order-page.tsx","components/burger-menu/burger-menu.tsx","components/menu/menu.tsx","App.tsx","reportWebVitals.ts","store/locationReducer.ts","store/modelReducer.ts","store/rootReducer.ts","store/store.ts","index.tsx"],"names":["SlideContent","props","title","description","buttonClass","btnClass","classNames","className","slides","image","Slider","renderedSlides","map","slide","data-src","animation","Header","MainBlock","to","Footer","StartPage","MapWidget","src","alt","SET_CITY_NAME","SET_CITY_ADDRESS","FETCH_CITIES","FETCH_POINTS","FETCH_CARS","SET_MODEL","loadCities","a","fetch","method","headers","response","ok","json","loadPoints","loadCars","fetchCities","dispatch","type","payload","data","fetchPoints","initialCity","name","id","initialPoint","address","cityId","mapDispatchToProps","setCityName","setCityAddress","connector","connect","state","location","city","cities","points","useSelector","useDispatch","useState","filteredPoints","setFilteredPoints","setCity","point","setPoint","useEffect","length","newFilteredPoints","filter","options","displayOption","filterOption","maxVisible","customClasses","input","listItem","showOptionsWhenEmpty","value","onOptionSelected","changeCity","placeholder","e","prettifyPrice","num","toString","split","join","model","priceMax","priceMin","CarCard","itemClass","car","data-id","thumbnail","path","onError","console","log","ModelGrid","filteredCars","handleCardClick","carId","carCards","onClick","StepTwo","cars","setCarId","modelOption","setModelOption","setFilteredCars","useCallback","modelItem","target","closest","getAttribute","find","setModel","categoryId","handleChangeValue","onChange","defaultChecked","htmlFor","OrderPage","default","selectedClassName","disabledClassName","disabled","BurgerMenu","isActive","changeActive","Menu","isOpen","href","App","showMenu","setShowMenu","prev","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","locationReducer","action","colors","number","tank","mimetype","originalname","modelReducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f1a17dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./slide-content.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nconst SlideContent = (props: any) => {\r\n  const { title, description, buttonClass } = props;\r\n  const btnClass = classNames(\"button\", \"button__medium\", buttonClass);\r\n  return (\r\n    <>\r\n      <h2 className=\"slider-content_title\">{title}</h2>\r\n      <p className=\"slider-content_description\">{description}</p>\r\n      <button className={btnClass}>Подробнее</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","const slides = [\r\n  {\r\n    image: \"./assets/slider1.png\",\r\n    title: \"Бесплатная парковка\",\r\n    description: `Оставляйте машину на платных городских парковках и разрешенных местах,\r\n        не нарушая ПДД, а также в аэропортах.`,\r\n    buttonClass: \"button__green\",\r\n  },\r\n  {\r\n    image: \"./assets/slider2.png\",\r\n    title: \"Страховка\",\r\n    description: `Полная страховка автомобиля`,\r\n    buttonClass: \"button__blue\",\r\n  },\r\n  {\r\n    image: \"./assets/slider3.png\",\r\n    title: \"Бензин\",\r\n    description: `Полный бак на любой заправке города за наш счёт`,\r\n    buttonClass: \"button__red\",\r\n  },\r\n  {\r\n    image: \"./assets/slider4.png\",\r\n    title: \"Обслуживание\",\r\n    description: `Автомобиль проходит еженедельное ТО`,\r\n    buttonClass: \"button__purple\",\r\n  },\r\n];\r\n\r\nexport default slides;\r\n","import React from \"react\";\r\nimport AwesomeSlider from \"react-awesome-slider\";\r\nimport \"react-awesome-slider/dist/styles.css\";\r\nimport \"./slider.scss\";\r\nimport SlideContent from \"../slide-content/slide-content\";\r\nimport slides from \"./slides\";\r\n\r\nconst Slider = () => {\r\n  const renderedSlides = slides.map((slide) => (\r\n    <div className=\"slider-content\" data-src={slide.image}>\r\n      <SlideContent\r\n        title={slide.title}\r\n        description={slide.description}\r\n        buttonClass={slide.buttonClass}\r\n      />\r\n    </div>\r\n  ));\r\n  return (\r\n    <AwesomeSlider className=\"slider\" animation=\"\">\r\n      {renderedSlides}\r\n    </AwesomeSlider>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h2 className=\"header_logo\">Need for drive</h2>\r\n      <div className=\"header_location\">\r\n        <span className=\"location\" />\r\n        <span>Ульяновск</span>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./main-block.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainBlock = () => {\r\n  return (\r\n    <main className=\"main-info\">\r\n      <div className=\"main-info_container\">\r\n        <div className=\"main-info_container-text\">\r\n          <h1 className=\"main-info_title\">Каршеринг</h1>\r\n          <h2 className=\"main-info_title main-info_title__accent\">\r\n            Need for drive\r\n          </h2>\r\n          <span className=\"main-info_description\">\r\n            Поминутная аренда авто твоего города\r\n          </span>\r\n        </div>\r\n        <Link to=\"/car-sharing/order\">\r\n          <button className=\"button button__wide\">Забронировать</button>\r\n        </Link>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainBlock;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"footer_copyright\">© 2016-2019 «Need for drive»</span>\r\n      <span className=\"footer_phone\">8 (495) 234-22-44</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./start-page.scss\";\r\nimport Slider from \"../../slider/slider\";\r\nimport Header from \"../../header/header\";\r\nimport MainBlock from \"../../main-block/main-block\";\r\nimport Footer from \"../../footer/footer\";\r\n\r\nconst StartPage = () => {\r\n  return (\r\n    <div className=\"start-page-container\">\r\n      <div className=\"main-page\">\r\n        <Header />\r\n        <MainBlock />\r\n        <Footer />\r\n      </div>\r\n      <div className=\"slider-container\">\r\n        <Slider />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React from \"react\";\r\nimport \"./map-widget.scss\";\r\n\r\nconst MapWidget = () => {\r\n  return (\r\n    <div className=\"order_map-container\">\r\n      <span>Выбрать на карте:</span>\r\n      <img src=\"./assets/map.png\" alt=\"map\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapWidget;\r\n","export const SET_CITY_NAME = \"LOCATION/SET_CITY_NAME\";\r\nexport const SET_CITY_ADDRESS = \"LOCATION/SET_CITY_ADDRESS\";\r\nexport const FETCH_CITIES = \"LOCATION/FETCH_CITIES\";\r\nexport const FETCH_POINTS = \"LOCATION/FETCH_POINTS\";\r\nexport const FETCH_CARS = \"MODEL/FETCH_CARS\";\r\nexport const SET_MODEL = \"MODEL/SET_MODEL\";\r\n","export async function loadCities() {\n  const response = await fetch(\n    \"https://api-factory.simbirsoft1.com/api/db/city\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"sofronovsd.github.io\",\n        \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\n      },\n    }\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n}\n\nexport async function loadPoints() {\n  const response = await fetch(\n    \"https://api-factory.simbirsoft1.com/api/db/point\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"https://sofronovsd.github.io\",\n        \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\n      },\n    }\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n}\n\nexport async function loadCars() {\n  const response = await fetch(\n    \"https://api-factory.simbirsoft1.com/api/db/car\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\":\n          \"https://api-factory.simbirsoft1.com/api/db/car\",\n        \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\n      },\n    }\n  );\n\n  if (response.ok) {\n    return response.json();\n  }\n}\n","import {\r\n  FETCH_CARS,\r\n  FETCH_CITIES,\r\n  FETCH_POINTS,\r\n  SET_CITY_ADDRESS,\r\n  SET_CITY_NAME,\r\n  SET_MODEL,\r\n} from \"./types\";\r\nimport { loadCars, loadCities, loadPoints } from \"../api/api-factory\";\r\nimport { ICar } from \"./modelReducer\";\r\n\r\nexport function setCityName(name: string) {\r\n  return {\r\n    type: SET_CITY_NAME,\r\n    payload: name,\r\n  };\r\n}\r\n\r\nexport function setCityAddress(address: string) {\r\n  return {\r\n    type: SET_CITY_ADDRESS,\r\n    payload: address,\r\n  };\r\n}\r\n\r\nexport function fetchCities() {\r\n  return async (dispatch: any) => {\r\n    const response = await loadCities();\r\n    dispatch({ type: FETCH_CITIES, payload: response.data });\r\n  };\r\n}\r\n\r\nexport function fetchPoints() {\r\n  return async (dispatch: any) => {\r\n    const response = await loadPoints();\r\n    dispatch({ type: FETCH_POINTS, payload: response.data });\r\n  };\r\n}\r\n\r\nexport function fetchCars() {\r\n  return async (dispatch: any) => {\r\n    const response = await loadCars();\r\n    dispatch({ type: FETCH_CARS, payload: response.data });\r\n  };\r\n}\r\n\r\nexport function setModel(car: ICar) {\r\n  return {\r\n    type: SET_MODEL,\r\n    payload: car,\r\n  };\r\n}\r\n","import { Typeahead } from \"@gforge/react-typeahead-ts\";\r\nimport MapWidget from \"../map-widget/map-widget\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  fetchCities,\r\n  fetchPoints,\r\n  setCityAddress,\r\n  setCityName,\r\n} from \"../../store/actions\";\r\nimport { connect, ConnectedProps, useDispatch, useSelector } from \"react-redux\";\r\nimport ICity from \"../../store/interfaces/i-city\";\r\nimport IPoint from \"../../store/interfaces/i-point\";\r\nimport \"./step-one.scss\";\r\nimport { LocationState } from \"../../store/locationReducer\";\r\n\r\nconst initialCity: ICity = { name: \"\", id: \"\" };\r\nconst initialPoint: IPoint = { name: \"\", address: \"\", cityId: { id: \"\" } };\r\n\r\nconst StepOne = (props: PropsFromRedux) => {\r\n  const cities = useSelector((state: StepOneState) => state.location.cities);\r\n  const points = useSelector((state: StepOneState) => state.location.points);\r\n  const dispatch = useDispatch();\r\n  const [filteredPoints, setFilteredPoints] = useState(points);\r\n  const [city, setCity] = useState(initialCity);\r\n  const [point, setPoint] = useState(initialPoint);\r\n\r\n  useEffect(() => {\r\n    if (!cities || cities.length === 0 || !points || points.length === 0) {\r\n      (async () => {\r\n        dispatch(fetchCities());\r\n        dispatch(fetchPoints());\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const newFilteredPoints = points.filter(\r\n      (point) => point.cityId.id === city.id\r\n    );\r\n    setFilteredPoints(newFilteredPoints);\r\n  }, [city, points]);\r\n\r\n  const changeCity = (value: any) => {\r\n    if (value) {\r\n      setCity(value);\r\n      props.setCityName(value.name);\r\n    }\r\n  };\r\n\r\n  const changePoint = (value: any) => {\r\n    if (value) {\r\n      setPoint(value);\r\n      props.setCityAddress(value.address);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"order_form-container\">\r\n      <form className=\"order_form\">\r\n        <label>Город</label>\r\n        <span className=\"clearable\">\r\n          <Typeahead\r\n            options={cities}\r\n            displayOption=\"name\"\r\n            filterOption=\"name\"\r\n            maxVisible={4}\r\n            customClasses={{ input: \"input\", listItem: \"listItem\" }}\r\n            showOptionsWhenEmpty={true}\r\n            value={city.name}\r\n            onOptionSelected={(value) => changeCity(value)}\r\n            placeholder=\"Начните вводить город...\"\r\n          />\r\n          <button className=\"icon-clear\" />\r\n        </span>\r\n        <label>Пункт выдачи</label>\r\n        <span className=\"clearable\">\r\n          <Typeahead\r\n            options={filteredPoints}\r\n            maxVisible={4}\r\n            displayOption=\"name\"\r\n            filterOption=\"name\"\r\n            customClasses={{ input: \"input\", listItem: \"listItem\" }}\r\n            showOptionsWhenEmpty={true}\r\n            value={point.name}\r\n            onOptionSelected={(e) => changePoint(e)}\r\n            placeholder=\"Начните вводить пункт...\"\r\n          />\r\n          <button className=\"icon-clear\" />\r\n        </span>\r\n      </form>\r\n      <MapWidget />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface StepOneState {\r\n  location: LocationState;\r\n}\r\n\r\nconst mapStateToProps = (state: StepOneState) => ({\r\n  name: state.location.city.name,\r\n  address: state.location.city.address,\r\n  cities: state.location.cities,\r\n  points: state.location.points,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setCityName,\r\n  setCityAddress,\r\n  fetchCities,\r\n  fetchPoints,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(StepOne);\r\n","export function prettifyPrice(num: number) {\r\n  const n = num.toString();\r\n  return n.split(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g).join(\" \");\r\n}\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\r\nimport \"./order-details.scss\";\r\nimport { ModelState } from \"../../store/modelReducer\";\r\nimport { prettifyPrice } from \"../../utils/utils\";\r\n\r\nconst OrderDetails = (props: OrderDetailsProps) => {\r\n  const { name, address } = props;\r\n\r\n  const model = useSelector((state: OrderDetailsState) => state.model.model);\r\n  return (\r\n    <div className=\"order-details\">\r\n      <label>Ваш заказ:</label>\r\n      {name ? (\r\n        <div className=\"order-details_row\">\r\n          <span>Пункт выдачи</span>\r\n          <div>............</div>\r\n          <div className=\"order-details_value\">\r\n            <span>{`${name}${address ? \",\" : \"\"}`}</span>\r\n            <span>{address}</span>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {model.name ? (\r\n        <div className=\"order-details_row\">\r\n          <span>Модель</span>\r\n          <div>............</div>\r\n          <div className=\"order-details_value\">\r\n            <span>{model.name}</span>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {model.priceMax ? (\r\n        <p>\r\n          <b>Цена:</b> от {prettifyPrice(model.priceMin)} до\r\n          {prettifyPrice(model.priceMax)} ₽\r\n        </p>\r\n      ) : null}\r\n      <button className=\"button button__infinite button__disabled\">\r\n        Выбрать модель\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  name: state.location.city.name,\r\n  address: state.location.city.address,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, null);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype OrderDetailsProps = PropsFromRedux & {\r\n  name: string;\r\n  address: string;\r\n};\r\n\r\ninterface OrderDetailsState {\r\n  model: ModelState;\r\n}\r\n\r\nexport default connector(OrderDetails);\r\n","import React from \"react\";\r\nimport { prettifyPrice } from \"../../utils/utils\";\r\nimport \"./car-card.scss\";\r\n\r\nconst CarCard = (props: any) => {\r\n  const { itemClass, car } = props;\r\n  return (\r\n    <div className={itemClass} key={car.id} data-id={car.id}>\r\n      <h4>{car.name}</h4>\r\n      <p>\r\n        {prettifyPrice(car.priceMin)} - {prettifyPrice(car.priceMax)} ₽\r\n      </p>\r\n      <img\r\n        src={`http://api-factory.simbirsoft1.com/${car.thumbnail.path}`}\r\n        alt=\"car\"\r\n        onError={() => console.log(\"error\", car.thumbnail)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarCard;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { ICar } from \"../../store/modelReducer\";\r\nimport \"./model-grid.scss\";\r\nimport CarCard from \"../car-card/car-card\";\r\n\r\nconst ModelGrid = (props: any) => {\r\n  const { filteredCars, handleCardClick, carId } = props;\r\n  const carCards = filteredCars.map((car: ICar) => {\r\n    const itemClass = classNames(\"model-item\", {\r\n      \"model-item__selected\": carId === car.id,\r\n    });\r\n    return <CarCard itemClass={itemClass} car={car} />;\r\n  });\r\n  return (\r\n    <div className=\"model-grid\" onClick={handleCardClick}>\r\n      {carCards}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelGrid;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./step-two.scss\";\r\nimport { fetchCars, setModel } from \"../../store/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ModelState } from \"../../store/modelReducer\";\r\nimport ModelGrid from \"../model-grid/model-grid\";\r\n\r\nconst StepTwo = () => {\r\n  const cars = useSelector((state: StepTwoState) => state.model.cars);\r\n  const dispatch = useDispatch();\r\n  const [carId, setCarId] = useState(\"\");\r\n  const [modelOption, setModelOption] = useState(\"\");\r\n  const [filteredCars, setFilteredCars] = useState(cars);\r\n\r\n  const handleCardClick = useCallback((e: any) => {\r\n    const modelItem = e.target.closest(\".model-item\");\r\n    if (modelItem) {\r\n      setCarId(modelItem.getAttribute(\"data-id\"));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const car = cars.find((car) => car.id === carId);\r\n    if (car) {\r\n      dispatch(setModel(car));\r\n    }\r\n  }, [carId]);\r\n\r\n  useEffect(() => {\r\n    if (!cars || cars.length === 0) {\r\n      (async () => {\r\n        dispatch(fetchCars());\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredCars(cars);\r\n  }, [cars]);\r\n\r\n  useEffect(() => {\r\n    switch (modelOption) {\r\n      case \"modelOption1\": {\r\n        setFilteredCars(cars);\r\n        break;\r\n      }\r\n      case \"modelOption2\": {\r\n        const filteredCars = cars.filter(\r\n          (car) => car.categoryId.name === \"Эконом\"\r\n        );\r\n        setFilteredCars(filteredCars);\r\n        break;\r\n      }\r\n      case \"modelOption3\": {\r\n        const filteredCars = cars.filter(\r\n          (car) => car.categoryId.name === \"Премиум\"\r\n        );\r\n        setFilteredCars(filteredCars);\r\n        break;\r\n      }\r\n      default: {\r\n        setFilteredCars(cars);\r\n      }\r\n    }\r\n  }, [modelOption]);\r\n\r\n  const handleChangeValue = useCallback((e: any) => {\r\n    setModelOption(e.target.id);\r\n  }, []);\r\n  return (\r\n    <div className=\"model-container\">\r\n      <div onChange={handleChangeValue}>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"custom-radio\"\r\n          name=\"modelType\"\r\n          id=\"modelOption1\"\r\n          defaultChecked\r\n        />\r\n        <label htmlFor=\"modelOption1\">Все модели</label>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"custom-radio\"\r\n          name=\"modelType\"\r\n          id=\"modelOption2\"\r\n        />\r\n        <label htmlFor=\"modelOption2\">Эконом</label>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"custom-radio\"\r\n          name=\"modelType\"\r\n          id=\"modelOption3\"\r\n        />\r\n        <label htmlFor=\"modelOption3\">Премиум</label>\r\n      </div>\r\n      <ModelGrid\r\n        filteredCars={filteredCars}\r\n        handleCardClick={handleCardClick}\r\n        carId={carId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface StepTwoState {\r\n  model: ModelState;\r\n}\r\n\r\nexport default StepTwo;\r\n","import React from \"react\";\r\nimport Header from \"../../header/header\";\r\nimport \"./order-page.scss\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport StepOne from \"../../step-one/step-one\";\r\nimport OrderDetails from \"../../order-details/order-details\";\r\nimport StepTwo from \"../../step-two/step-two\";\r\n\r\nconst OrderPage = () => {\r\n  return (\r\n    <div className=\"order-page-container\">\r\n      <Header />\r\n      <Tabs>\r\n        <div className=\"order-nav-bar-container\">\r\n          <TabList className=\"order-nav-bar\">\r\n            <Tab\r\n              className=\"tab-button link\"\r\n              default\r\n              selectedClassName=\"link__accent\"\r\n            >\r\n              Местоположение\r\n            </Tab>\r\n            <Tab\r\n              className=\"tab-button link\"\r\n              selectedClassName=\"link__accent\"\r\n              disabledClassName=\"link__disabled\"\r\n              disabled={false}\r\n            >\r\n              Модель\r\n            </Tab>\r\n            <Tab\r\n              className=\"tab-button link\"\r\n              disabled={true}\r\n              disabledClassName=\"link__disabled\"\r\n              selectedClassName=\"link__accent\"\r\n            >\r\n              Дополнительно\r\n            </Tab>\r\n            <Tab\r\n              className=\"tab-button link\"\r\n              disabled={true}\r\n              disabledClassName=\"link__disabled\"\r\n              selectedClassName=\"link__accent\"\r\n            >\r\n              Итого\r\n            </Tab>\r\n          </TabList>\r\n        </div>\r\n        <TabPanel className=\"react-tabs__tab-panel\">\r\n          <main className=\"order-container\">\r\n            <StepOne />\r\n            <OrderDetails />\r\n          </main>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <main className=\"order-container\">\r\n            <StepTwo />\r\n            <OrderDetails />\r\n          </main>\r\n        </TabPanel>\r\n        <TabPanel>content for tab #3</TabPanel>\r\n        <TabPanel>content for tab #4</TabPanel>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import React from \"react\";\r\nimport \"./burger-menu.scss\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface IBurger {\r\n  isActive: boolean;\r\n  changeActive: any;\r\n}\r\n\r\nconst BurgerMenu = ({ isActive, changeActive }: IBurger) => {\r\n  const buttonClass = classNames(\"burger-menu\", {\r\n    \"burger-menu__active\": isActive,\r\n  });\r\n  return (\r\n    <button className={buttonClass} onClick={changeActive}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import React from \"react\";\r\nimport \"./menu.scss\";\r\n\r\ninterface IMenu {\r\n  isOpen: boolean;\r\n}\r\n\r\nconst Menu = (props: IMenu) => {\r\n  const { isOpen } = props;\r\n  return (\r\n    <nav className={`modal ${isOpen ? \"modal__active\" : \"\"}`}>\r\n      <ul className=\"modal_menu menu\">\r\n        <li>\r\n          <a href=\"#\" target=\"_blank\">\r\n            Парковка\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\" target=\"_blank\">\r\n            Страховка\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\" target=\"_blank\">\r\n            Бензин\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\" target=\"_blank\">\r\n            Обслуживание\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <ul className=\"menu menu__horizontal\">\r\n            <li>\r\n              <a href=\"#\" target=\"_blank\">\r\n                <span className=\"telegram\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" target=\"_blank\">\r\n                <span className=\"facebook\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" target=\"_blank\">\r\n                <span className=\"instagram\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport StartPage from \"./components/pages/start-page/start-page\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport OrderPage from \"./components/pages/order-page/order-page\";\r\nimport BurgerMenu from \"./components/burger-menu/burger-menu\";\r\nimport Menu from \"./components/menu/menu\";\r\n\r\nfunction App() {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const changeActive = useCallback(() => {\r\n    setShowMenu((prev: boolean) => !prev);\r\n  }, [setShowMenu]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Menu isOpen={showMenu} />\r\n      <aside className=\"side-bar\">\r\n        <BurgerMenu isActive={showMenu} changeActive={changeActive} />\r\n        <button className=\"language-btn\">Eng</button>\r\n      </aside>\r\n      <Switch>\r\n        <Route exact path=\"/car-sharing\" component={StartPage} />\r\n        <Route path=\"/car-sharing/order\" component={OrderPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  FETCH_CITIES,\r\n  FETCH_POINTS,\r\n  SET_CITY_ADDRESS,\r\n  SET_CITY_NAME,\r\n} from \"./types\";\r\nimport ICity from \"./interfaces/i-city\";\r\nimport IPoint from \"./interfaces/i-point\";\r\n\r\nconst initialState: LocationState = {\r\n  city: {\r\n    name: \"\",\r\n    address: \"\",\r\n  },\r\n  cities: [],\r\n  points: [],\r\n};\r\n\r\ninterface StateCity {\r\n  name: string;\r\n  address: string;\r\n}\r\n\r\nexport interface LocationState {\r\n  city: StateCity;\r\n  cities: ICity[];\r\n  points: IPoint[];\r\n}\r\n\r\ninterface IAction {\r\n  type: string;\r\n  payload: string | ICity[] | IPoint[];\r\n}\r\n\r\nconst locationReducer = (state = initialState, action: IAction) => {\r\n  console.log(\"action\", action);\r\n  switch (action.type) {\r\n    case SET_CITY_NAME: {\r\n      return {\r\n        ...state,\r\n        city: {\r\n          ...state.city,\r\n          name: action.payload,\r\n        },\r\n      };\r\n    }\r\n    case SET_CITY_ADDRESS: {\r\n      return {\r\n        ...state,\r\n        city: {\r\n          ...state.city,\r\n          address: action.payload,\r\n        },\r\n      };\r\n    }\r\n    case FETCH_CITIES: {\r\n      return {\r\n        ...state,\r\n        cities: action.payload,\r\n      };\r\n    }\r\n    case FETCH_POINTS: {\r\n      return {\r\n        ...state,\r\n        points: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationReducer;\r\n","import { FETCH_CARS, SET_MODEL } from \"./types\";\r\n\r\nconst initialState = {\r\n  model: {\r\n    id: \"\",\r\n    colors: [],\r\n    name: \"\",\r\n    description: \"\",\r\n    number: \"\",\r\n    priceMax: 0,\r\n    priceMin: 0,\r\n    tank: 0,\r\n    thumbnail: {\r\n      mimetype: \"\",\r\n      originalname: \"\",\r\n      path: \"\",\r\n    },\r\n    categoryId: {\r\n      description: \"\",\r\n      name: \"\",\r\n      id: \"\",\r\n    },\r\n  },\r\n  cars: [],\r\n};\r\n\r\ninterface IAction {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport interface ICar {\r\n  id: string;\r\n  colors: string[];\r\n  name: string;\r\n  description: string;\r\n  number: string;\r\n  priceMax: number;\r\n  priceMin: number;\r\n  tank: number;\r\n  thumbnail: IThumbnail;\r\n  categoryId: CategoryId;\r\n}\r\n\r\ninterface IThumbnail {\r\n  mimetype: string;\r\n  originalname: string;\r\n  path: string;\r\n}\r\n\r\ninterface CategoryId {\r\n  description: string;\r\n  name: string;\r\n  id: string;\r\n}\r\n\r\nexport interface ModelState {\r\n  model: ICar;\r\n  cars: ICar[];\r\n}\r\n\r\nconst modelReducer = (state: ModelState = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case FETCH_CARS: {\r\n      return {\r\n        ...state,\r\n        cars: action.payload,\r\n      };\r\n    }\r\n    case SET_MODEL: {\r\n      return {\r\n        ...state,\r\n        model: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modelReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport locationReducer from \"./locationReducer\";\r\nimport modelReducer from \"./modelReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  location: locationReducer,\r\n  model: modelReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}